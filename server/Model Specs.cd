Model Specs

****Events****

Database:
 -event_name:     str
 -location:       str
 -start_time:     Date()
 -end_time:       Date()
 -pic_url:        str
 -categories:     [strs]
 -users_att:      [user_ids]
 -owners:         [user_ids]
 -creation_time:  Date()
 -description:    str

Methods:

createEvent()
Input: event obj (see db elements)
Output: err/null

getEvent()
Input: eventID
Output: Event obj

deleteEvent()
Input: eventID
Output: err/null

editEvent()
Input: Event obj
Output: err if ID does not match value in database; null on success

getEvents()
Input: Obj of filtering criteria (e.g. {location: 'Austin'})
Output: Array of all event objs meeting filter criteria



****Users****

Database:
 -email:    str
 -password: str (plain text)
 -first_name: str
 -last_name:  str
 -alias:      str
 -hometown:   str
 -interests:  [strs]
 -pic_url:    str

Methods:

createUser()
Input: User Obj (excluding ID)
Output: err/null

getUser()
Input: user_id
Output: User Obj

deleteUser()
Input: user_id
Output: err/null

checkAuth()
Input: {email: str, password: str}
Output: User Obj, or error

joinEvent()
Input: (user_id, event_id)
Output: err/null


****Events Message Board****

Database:
 -event_id:   id
 -messages: [
 {user_id:  id,
  msg:      str,
  time:     Date
 },...]

Methods:

getEventMsgs()

addMsg()

deleteMsg()

editMsg()